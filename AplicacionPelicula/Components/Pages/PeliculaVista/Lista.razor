@page "/Weather"
@using AplicacionPelicula.Servicios
@inject PeliculaService PeliculaService  
@inject NavigationManager NavigationManager

<style>
    body, .page {
        background-color: #121212 !important;
        color: #fff;
        margin: 0;
        padding: 0;
    }

    .page-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .page-title {
        color: #f1c40f;
        text-align: center;
        margin-bottom: 20px;
        font-size: 1.8rem;
    }

    /*tarjetas*/
    .card {
        background-color: #1c1c1c;
        border-radius: 12px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.5);
        display: flex;
        align-items: stretch;
        flex-direction: column;
        transition: transform 0.3s ease;
        height: 100%;
    }

        .card img {
            width: 100%;
            height: 180px;
            object-fit: cover;
            border-radius: 8px;
        }

        .card h4, .card p {
            text-align: left;
            width: 100%;
        }

        .card h4 {
            margin: 0;
            font-size: 1.2rem;
            color: #f1c40f;
        }

        .card p {
            margin: 4px 0;
            font-size: 0.95rem;
            color: #ddd;
        }

        .card span {
            font-weight: bold;
            color: #fff;
        }

        .card:hover{
            transform: scale(1.02);
        }
</style>

<div class="page-container">
    <h2 class="page-title">Listado de Peliculas</h2>
    <button class="btn-yellow" @onclick="CargarPeliculas">Recargar</button>
    <p style="text-align:center; color:#ccc;">@mensajeEstado</p>

    @if (Peliculas == null)
    {
        <p>Cargando...</p>
    }
    else if (!Peliculas.Any())
    {
        <p>No hay peliculas registradas.</p>
    }
    else
    {
        <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px;">
            @foreach (var pelicula in Peliculas)
            {
                try
                {
                    <div class="card">
                        @if (!string.IsNullOrWhiteSpace(pelicula.ImagenRuta))
                        {
                            <img src="@pelicula.ImagenRuta" alt="Imagen de @pelicula.Titulo"
                                 onerror="this.onerror=null;this.src='images/default.jpg';" />
                        }
                        else
                        {
                            <img src="images/default.jpg" alt="Sin imagen" />
                            <p style="color:#e74c3c; font-size:0.8rem;">Imagen no disponible</p>
                        }

                        <h4>@pelicula.Titulo</h4>
                        <p><span>Género:</span> @pelicula.Genero</p>
                        <p><span>Año:</span> @pelicula.Anio</p>
                        <p><span>Descripción:</span> @pelicula.Descripcion</p>
                        <p><span>Fecha:</span> @pelicula.Fecha.ToString("dd/MM/yyyy")</p>
                    </div>
                }
                catch (Exception tarjetaEx)
                {
                    <div class="card" style="background-color:#2c3e50;">
                        <h4>Error al mostrar película</h4>
                        <p style="color:#e74c3c;">@tarjetaEx.Message</p>
                    </div>
                }
            }
        </div>
    }

    @if (!string.IsNullOrEmpty(mensajeError))
    {
        <p style="color:#e74c3c; text-align:center;">@mensajeError</p>
    }
</div>
@code {
    string mensajeError;
    string mensajeEstado = "iniciando carga...";
    bool estaCargando = true;

    private List<Modelos.Pelicula> Peliculas = new List<Modelos.Pelicula>();

    private async Task CargarPeliculas()
    {
        mensajeEstado = "solicitando peliculas desde el servidos...";
        estaCargando = true;

        try
        {
            Peliculas = await PeliculaService.GetPeliculasAsync();

            if(Peliculas == null)
            {
                mensajeEstado = "la respuesta fue nula";
            }else if (!Peliculas.Any())
            {
                mensajeEstado = "no se encontraron peliculas";
            }
            else
            {
                mensajeEstado = $"se cargaron {Peliculas.Count} peliculas";
            }
        }catch (Exception ex)
        {
            mensajeError = $"error al cargar peliculas: {ex.Message}";
            mensajeEstado = "fallo la carga";
        }
        finally
        {
            estaCargando = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarPeliculas();
    }
}
